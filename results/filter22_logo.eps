%!PS-Adobe-3.0 EPSF-3.0
%%Title:        Sequence Logo: 
%%Creator:      WebLogo 3.7.12
%%CreationDate: 2023-05-06 18:03:54.396964
%%BoundingBox:  0  0  297  66 
%%Pages: 0
%%DocumentFonts: 
%%EndComments


% ---- VARIABLES ----

/True   true def
/False  false def

/debug              False        def

/logo_height        66  def
/logo_width         297  def
/logo_title         () def
/show_title         False def

/logo_margin        2 def
/xaxis_label_height 0.0 def
/title_height       0 def
/stroke_width       0.5 def
/tic_length         5 def

/lines_per_logo     1 def
/line_width         293.20000000000005 def
/line_height        62.0 def
/line_margin_left   30.0 def
/line_margin_right  4 def
/line_margin_bottom 4 def
/line_margin_top    4 def

/stack_width         10.8 def
/stack_height        54.0 def
/stacks_per_line     24 def
/stack_margin        0.5 def

/show_yaxis             True def      
/show_yaxis_label       True def
/yaxis_label            (bits) def
/yaxis_scale          2.0 def              % height in units 
/yaxis_tic_interval     1.0 def           % in units
/yaxis_minor_tic_interval 0.2 def   % in units

/show_xaxis_label       False def             % True or False
/show_xaxis             False def                   % True or False
/xaxis_label            () def
/xaxis_tic_interval     1 def
/rotate_numbers         False def               % True or False
/number_interval        5 def
/show_ends              False def          
/end_type               (-) def          % d: DNA, p: PROTEIN, -: none

/show_fineprint         False def
/fineprint              () def
/logo_label             () def

/show_boxes             False def    % True or False
/shrink                 false def    % True or False
/shrink_fraction        0.5 def               

/show_errorbars         True def      % True or False
/errorbar_fraction      0.9 def
/errorbar_width_fraction  0.25 def
/errorbar_gray          0.75 def

/fontsize               10 def
/small_fontsize         6 def
/title_fontsize         12 def
/number_fontsize        8 def


/UseCIEColor true def       % Fix for issue 4
/default_color [ 0.0 0.0 0.0 ] def 


% ---- DERIVED PARAMETERS ----

/char_width stack_width 2 stack_margin mul sub def
/char_width2 char_width 2 div def
/char_width4 char_width 4 div def

% movements to place 5'/N and 3'/C symbols
/leftEndDeltaX  fontsize neg         def
/leftEndDeltaY  fontsize 1.25 mul neg def
/rightEndDeltaX fontsize 0.25 mul     def
/rightEndDeltaY leftEndDeltaY        def


% ---- PROCEDURES ----


/SetTitleFont {/ArialMT findfont title_fontsize scalefont setfont} bind def
/SetLogoFont  {/ArialMT findfont char_width  scalefont setfont} bind def
/SetStringFont{/ArialMT findfont fontsize scalefont setfont} bind def
/SetPrimeFont {/Symbol findfont fontsize scalefont setfont} bind def
/SetSmallFont {/ArialMT findfont small_fontsize scalefont setfont} bind def
/SetNumberFont {/ArialMT findfont number_fontsize scalefont setfont} bind def

/DrawBox { % width height 
    /hh exch def
    /ww exch def
    gsave
        0.2 setlinewidth
        %0.5 setgray
        
        %0 0 moveto 
        hh 0 rlineto
        0 ww rlineto
        hh neg 0 rlineto
        0 ww neg rlineto
        stroke
    grestore
} bind def


/StartLogo { 
  %save 
  gsave 

  
  debug { 
    logo_margin logo_margin moveto
    logo_height logo_margin 2 mul sub
    logo_width logo_margin 2 mul sub
    DrawBox } if
    
  show_title { DrawTitle } if
  show_xaxis_label { DrawXaxisLable } if
  show_fineprint { DrawFineprint } if
  DrawLogoLabel
  
  
  MoveToFirstLine
} bind def


/DrawLogoLabel {
  gsave 
    SetTitleFont
    
    logo_margin
    logo_height title_fontsize sub logo_margin sub
    moveto
    
    debug { title_fontsize logo_label stringwidth pop DrawBox } if
    0 title_fontsize 4 div rmoveto % Move up to baseline (approximatly)
    logo_label show
    
  grestore
} bind def

/DrawTitle {
  gsave 
    SetTitleFont
    
    logo_width 2 div logo_title stringwidth pop 2 div sub 
    logo_height title_fontsize sub logo_margin sub
    moveto
    
    debug { title_fontsize logo_title stringwidth pop DrawBox } if
    
    0 title_fontsize 4 div rmoveto % Move up to baseline (approximatly)
    logo_title show
    
  grestore
} bind def

/DrawXaxisLable {
  % Print X-axis label, bottom center
  gsave
    SetStringFont

    logo_width 2 div xaxis_label stringwidth pop 2 div sub
    xaxis_label_height logo_margin add fontsize sub
    moveto
    %fontsize 3 div
    
    debug { fontsize xaxis_label stringwidth pop DrawBox } if

    xaxis_label show

  grestore
} bind def


/DrawFineprint {
    gsave
    
    SetSmallFont

    logo_width fineprint stringwidth pop sub 
        logo_margin sub line_margin_right sub
    logo_margin 
    moveto
    
    debug { small_fontsize fineprint stringwidth pop DrawBox } if
        
    fineprint show
    grestore
} bind def

/MoveToFirstLine {
    logo_margin 
    logo_height logo_margin sub title_height sub line_height sub
    moveto
} bind def

/EndLogo { 
  grestore 
  %showpage 
  %restore 
} bind def


/StartLine{ 
    gsave 
  
    % Draw outer box
    debug { line_height line_width DrawBox } if  

    % Move to lower left corner of content area
    line_margin_left line_margin_bottom rmoveto

    % Draw inner content box
    debug { 
        line_height line_margin_bottom sub line_margin_top sub
        line_width line_margin_left sub line_margin_right sub
        DrawBox
    } if  
  
    show_yaxis { DrawYaxis } if
    show_xaxis { DrawLeftEnd } if
    
} bind def

/EndLine{ 
    show_xaxis { DrawRightEnd } if
    grestore 
    0 line_height neg rmoveto 
} bind def


/DrawYaxis {
  gsave    
    stack_margin neg 0 translate
    DrawYaxisBar
    DrawYaxisLabel
  grestore
} bind def


/DrawYaxisBar { 
  gsave  
    stack_margin neg 0 rmoveto
    
    SetNumberFont
    stroke_width setlinewidth
    
    /str 10 string def % string to hold number  
    /smallgap stack_margin  def

    % Draw first tic and bar
    gsave    
      tic_length neg 0 rmoveto 
      tic_length 0 rlineto 
      0 stack_height rlineto
      stroke
    grestore

    % Draw the tics
    % initial increment limit proc for
    0 yaxis_tic_interval yaxis_scale abs 
    {/loopnumber exch def

      % convert the number coming from the loop to a string
      % and find its width
      loopnumber 10 str cvrs
      /stringnumber exch def % string representing the number

      stringnumber stringwidth pop
      /numberwidth exch def % width of number to show

      /halfnumberheight
         stringnumber CharBoxHeight 2 div
      def

      gsave
        numberwidth % move back width of number
        neg loopnumber stack_height yaxis_scale div mul % shift on y axis
        halfnumberheight sub % down half the digit
        rmoveto % move back the width of the string

        tic_length neg smallgap sub % Move back a bit more  
        0 rmoveto % move back the width of the tic  

        stringnumber show
        smallgap 0 rmoveto % Make a small gap  

        % now show the tic mark
        0 halfnumberheight rmoveto % shift up again
        tic_length 0 rlineto
        stroke
     grestore
    } for
    
    % Draw the minor tics
    % initial increment limit proc for
    0 yaxis_minor_tic_interval yaxis_scale abs 
    {/loopnumber2 exch def
      gsave
        0
        loopnumber2 stack_height yaxis_scale div mul 
        rmoveto 

        tic_length 2 div neg 0 rlineto
        stroke
     grestore
    } for    
    
  grestore
} bind def

/DrawYaxisLabel {
  gsave
    SetStringFont

    % How far we move left depends on the size of
    % the tic labels.
    /str 10 string def % string to hold number  
    yaxis_scale yaxis_tic_interval div cvi yaxis_tic_interval mul 
    str cvs stringwidth pop
    tic_length 1.25 mul  add neg  

    stack_height
    yaxis_label stringwidth pop
    sub 2 div

    rmoveto
    90 rotate
    
    yaxis_label show
  grestore
} bind def


%Take a single character and return the bounding box
/CharBox { % <char> CharBox <lx> <ly> <ux> <uy>
  gsave
    newpath
    0 0 moveto
    % take the character off the stack and use it here:
    true charpath 
    flattenpath 
    pathbbox % compute bounding box of 1 pt. char => lx ly ux uy
    % the path is here, but toss it away ...
  grestore
} bind def


% The height of a characters bounding box
/CharBoxHeight { % <char> CharBoxHeight <num>
  CharBox
  exch pop sub neg exch pop
} bind def


% The width of a characters bounding box
/CharBoxWidth { % <char> CharBoxHeight <num>
  CharBox
  pop exch pop sub neg 
} bind def


/DrawLeftEnd {
  gsave
    SetStringFont
    leftEndDeltaX leftEndDeltaY rmoveto
    
    show_ends {
        debug { leftEndDeltaY neg leftEndDeltaX neg DrawBox } if
        end_type (d) eq {(5) show DrawPrime} if
        end_type (p) eq {(N) show} if
    } if
  grestore
} bind def

/DrawRightEnd { 
  gsave
    SetStringFont
    rightEndDeltaX rightEndDeltaY rmoveto
    
    show_ends {
        debug { rightEndDeltaY neg leftEndDeltaX neg  DrawBox } if
        end_type (d) eq {(3) show DrawPrime} if
        end_type (p) eq {(C) show} if
    } if
  grestore
} bind def

/DrawPrime {
  gsave
    SetPrimeFont
    (\242) show 
  grestore
} bind def


/StartStack {  % <stackNumber> startstack
  show_xaxis {DrawNumber}{pop} ifelse
  gsave
  debug { stack_height stack_width DrawBox } if
    
} bind def

/EndStack {
  grestore
  stack_width 0 rmoveto
} bind def


/DrawNumber { % number MakeNumber
    /n exch def
    
    
  gsave
    %0 stack_margin neg rmoveto
    stroke_width setlinewidth
    stack_width  0 rlineto
    stack_width 2 div neg 0 rmoveto
    
    n () eq 
    {  0 tic_length 4 div neg rlineto  } 
    { 0 tic_length 2 div neg rlineto } 
    ifelse

    stroke
  grestore   



  gsave
    n
    SetNumberFont
    stack_width 2 div tic_length 2 div neg rmoveto 

    rotate_numbers {
        90 rotate     
        dup stringwidth pop neg % find the length of the number
        stack_margin sub        % Move down a bit
        (0) CharBoxHeight 2 div neg % left half height of numbers
        rmoveto 
        show
    } {
        dup stringwidth pop neg 2 div number_fontsize neg  rmoveto
        show
    } ifelse
    
    

  grestore
} bind def



% Draw a character whose height is proportional to symbol bits
/ShowSymbol{ % interval color character ShowSymbol
    /char exch def
    /color exch def
    /interval exch def
    /fraction_width exch def
    
    /char_height 
       interval yaxis_scale div stack_height mul
       stack_margin sub
       dup 
       % if char_height is negative or very small replace with zero 
       % BUG FIX: This used to be '0.0 gt' but it seems that DrawHeight
       % has a finite, non-zero minimum, which results in a rangecheck error
       0.01 gt {}{pop 0.0} ifelse 
    def 

    char_height 0.0 gt {
        show_boxes {
            gsave
                /ww char_height stack_margin add def
                /hh stack_width def
                stroke_width setlinewidth
                hh 0 rlineto
                0 ww rlineto
                hh neg 0 rlineto
                0 ww neg rlineto
                stroke
            grestore     
        } if

        gsave
            stack_margin stack_margin rmoveto
            debug { char_height char_width DrawBox } if
            1 fraction_width sub char_width mul 2 div  0 rmoveto
            fraction_width char_width mul char_height color char DrawChar
        grestore
        
    } if
    0 interval yaxis_scale div stack_height mul rmoveto
} bind def


/DrawChar { % <width> <height> <char> ShowChar
    /tc exch def    % The character
    /color exch def % The color of the character
    /ysize exch def % the y size of the character
    /xsize exch def % the x size of the character
    /xmulfactor 1 def 
    /ymulfactor 1 def
    
    gsave
        SetLogoFont    
        color aload pop setrgbcolor

        % IReplacementHack
        % Deal with the lack of bars on the letter 'I' in Arial and Helvetica
        % by replacing with 'I' from Courier.
        tc (I) eq {
            /Courier findfont char_width  scalefont setfont    
        } if


        shrink {
            xsize 1 shrink_fraction sub 2 div mul
            ysize 1 shrink_fraction sub 2 div mul rmoveto 
            shrink_fraction shrink_fraction scale
        } if
        
        % Calculate the font scaling factors
        % Loop twice to catch small correction due to first scaling
        2 {
            gsave
            xmulfactor ymulfactor scale
      
            ysize % desired size of character in points
            tc CharBoxHeight 
            dup 0.0 ne {
                div % factor by which to scale up the character
                /ymulfactor exch def
            } {pop pop} ifelse

            xsize % desired size of character in points
            tc CharBoxWidth  
            dup 0.0 ne {
                div % factor by which to scale up the character
                /xmulfactor exch def
            } {pop pop} ifelse
            grestore
        } repeat


  
        % Draw the character
        xmulfactor ymulfactor scale
        % Move lower left corner of character to start point
        tc CharBox pop pop % llx lly : Lower left corner
        exch neg exch neg
        rmoveto
        
        tc show    

    grestore
} bind def

/DrawErrorbar{ % interval_down interval_up DrawErrorbar
    
    gsave
    /points_per_unit stack_height yaxis_scale div def 
    /height_up   exch points_per_unit mul def 
    /height_down exch points_per_unit mul def
    
    show_errorbars {
    
    stroke_width setlinewidth
    errorbar_gray setgray     
    stack_width 2 div 0 rmoveto
    
    /errorbar_width char_width errorbar_width_fraction mul def
    /errorbar_width2 errorbar_width 2 div def
    
    gsave 
        0 height_down neg rmoveto
        errorbar_width2 neg 0 rlineto
        errorbar_width 0 rlineto
        errorbar_width2 neg 0 rlineto
        0 height_down errorbar_fraction mul rlineto 
        stroke
    grestore

    gsave 
        0 height_up  rmoveto
        errorbar_width2 neg 0 rlineto
        errorbar_width 0 rlineto
        errorbar_width2 neg 0 rlineto
        0 height_up neg errorbar_fraction mul rlineto 
        stroke
    grestore
    } if
           
    grestore
    
} bind def

/DrawErrorbarFirst{ % interval_down interval_up center DrawErrorbarFirst
    gsave
    /points_per_unit stack_height yaxis_scale div def 
    /center   exch points_per_unit mul def 

    0 center rmoveto
    DrawErrorbar
    grestore
} bind def

%%EndProlog

%%Page: 1 1

% Example Data
%StartLogo
%    StartLine
%        (1) StartStack
%            1.2 [0 0 0] (C) ShowSymbol
%            2.2 [0 0 0] (I) ShowSymbol
%            0.5 0.5 DrawErrorbar
%        EndStack
%        (2) StartStack
%            0.5 [0 0 0] (I) ShowSymbol
%            0.9 [0 0 0] (L) ShowSymbol
%            1.0 [0 0 0] (G) ShowSymbol
%            0.5 0.5 DrawErrorbar        
%        EndStack
%        (234) StartStack
%        EndStack
%        (235) StartStack
%        EndStack
%    EndLine
%EndLogo

StartLogo

StartLine
() StartStack
 1.000000 0.023743 [ 0.047058823529411764 0.5019607843137255 0.25098039215686274 ] (T) ShowSymbol
 1.000000 0.059357 [ 0.20392156862745098 0.27058823529411763 0.611764705882353 ] (C) ShowSymbol
 1.000000 0.130586 [ 0.796078431372549 0.12549019607843137 0.14901960784313725 ] (A) ShowSymbol
 1.000000 0.486729 [ 0.984313725490196 0.6941176470588235 0.08627450980392157 ] (G) ShowSymbol
 0.294560 0.294560 DrawErrorbar
EndStack

() StartStack
 1.000000 0.032559 [ 0.047058823529411764 0.5019607843137255 0.25098039215686274 ] (T) ShowSymbol
 1.000000 0.048838 [ 0.984313725490196 0.6941176470588235 0.08627450980392157 ] (G) ShowSymbol
 1.000000 0.065118 [ 0.796078431372549 0.12549019607843137 0.14901960784313725 ] (A) ShowSymbol
 1.000000 0.173648 [ 0.20392156862745098 0.27058823529411763 0.611764705882353 ] (C) ShowSymbol
 0.182491 0.258176 DrawErrorbar
EndStack

() StartStack
 1.000000 0.013230 [ 0.20392156862745098 0.27058823529411763 0.611764705882353 ] (C) ShowSymbol
 1.000000 0.024806 [ 0.047058823529411764 0.5019607843137255 0.25098039215686274 ] (T) ShowSymbol
 1.000000 0.026460 [ 0.796078431372549 0.12549019607843137 0.14901960784313725 ] (A) ShowSymbol
 1.000000 0.033075 [ 0.984313725490196 0.6941176470588235 0.08627450980392157 ] (G) ShowSymbol
 0.077394 0.137202 DrawErrorbar
EndStack

() StartStack
 1.000000 0.021797 [ 0.984313725490196 0.6941176470588235 0.08627450980392157 ] (G) ShowSymbol
 1.000000 0.036328 [ 0.796078431372549 0.12549019607843137 0.14901960784313725 ] (A) ShowSymbol
 1.000000 0.061757 [ 0.047058823529411764 0.5019607843137255 0.25098039215686274 ] (T) ShowSymbol
 1.000000 0.094452 [ 0.20392156862745098 0.27058823529411763 0.611764705882353 ] (C) ShowSymbol
 0.136269 0.203873 DrawErrorbar
EndStack

(5) StartStack
 1.000000 0.015472 [ 0.984313725490196 0.6941176470588235 0.08627450980392157 ] (G) ShowSymbol
 1.000000 0.020629 [ 0.796078431372549 0.12549019607843137 0.14901960784313725 ] (A) ShowSymbol
 1.000000 0.029224 [ 0.047058823529411764 0.5019607843137255 0.25098039215686274 ] (T) ShowSymbol
 1.000000 0.036101 [ 0.20392156862745098 0.27058823529411763 0.611764705882353 ] (C) ShowSymbol
 0.081167 0.145258 DrawErrorbar
EndStack

() StartStack
 1.000000 0.040119 [ 0.20392156862745098 0.27058823529411763 0.611764705882353 ] (C) ShowSymbol
 1.000000 0.045850 [ 0.984313725490196 0.6941176470588235 0.08627450980392157 ] (G) ShowSymbol
 1.000000 0.063044 [ 0.796078431372549 0.12549019607843137 0.14901960784313725 ] (A) ShowSymbol
 1.000000 0.189133 [ 0.047058823529411764 0.5019607843137255 0.25098039215686274 ] (T) ShowSymbol
 0.190720 0.268525 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000000 [ 0.20392156862745098 0.27058823529411763 0.611764705882353 ] (C) ShowSymbol
 1.000000 0.027529 [ 0.047058823529411764 0.5019607843137255 0.25098039215686274 ] (T) ShowSymbol
 1.000000 0.289051 [ 0.796078431372549 0.12549019607843137 0.14901960784313725 ] (A) ShowSymbol
 1.000000 0.495516 [ 0.984313725490196 0.6941176470588235 0.08627450980392157 ] (G) ShowSymbol
 0.220175 0.220175 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000000 [ 0.047058823529411764 0.5019607843137255 0.25098039215686274 ] (T) ShowSymbol
 1.000000 0.000000 [ 0.20392156862745098 0.27058823529411763 0.611764705882353 ] (C) ShowSymbol
 1.000000 0.274871 [ 0.796078431372549 0.12549019607843137 0.14901960784313725 ] (A) ShowSymbol
 1.000000 0.806288 [ 0.984313725490196 0.6941176470588235 0.08627450980392157 ] (G) ShowSymbol
 0.230997 0.230997 DrawErrorbar
EndStack

() StartStack
 1.000000 0.025686 [ 0.047058823529411764 0.5019607843137255 0.25098039215686274 ] (T) ShowSymbol
 1.000000 0.035960 [ 0.984313725490196 0.6941176470588235 0.08627450980392157 ] (G) ShowSymbol
 1.000000 0.102744 [ 0.796078431372549 0.12549019607843137 0.14901960784313725 ] (A) ShowSymbol
 1.000000 0.138704 [ 0.20392156862745098 0.27058823529411763 0.611764705882353 ] (C) ShowSymbol
 0.164749 0.228254 DrawErrorbar
EndStack

(10) StartStack
 1.000000 0.044615 [ 0.20392156862745098 0.27058823529411763 0.611764705882353 ] (C) ShowSymbol
 1.000000 0.059487 [ 0.047058823529411764 0.5019607843137255 0.25098039215686274 ] (T) ShowSymbol
 1.000000 0.089231 [ 0.796078431372549 0.12549019607843137 0.14901960784313725 ] (A) ShowSymbol
 1.000000 0.684101 [ 0.984313725490196 0.6941176470588235 0.08627450980392157 ] (G) ShowSymbol
 0.334098 0.334098 DrawErrorbar
EndStack

() StartStack
 1.000000 0.033526 [ 0.796078431372549 0.12549019607843137 0.14901960784313725 ] (A) ShowSymbol
 1.000000 0.044702 [ 0.984313725490196 0.6941176470588235 0.08627450980392157 ] (G) ShowSymbol
 1.000000 0.134105 [ 0.20392156862745098 0.27058823529411763 0.611764705882353 ] (C) ShowSymbol
 1.000000 0.447017 [ 0.047058823529411764 0.5019607843137255 0.25098039215686274 ] (T) ShowSymbol
 0.290361 0.290361 DrawErrorbar
EndStack

() StartStack
 1.000000 0.019537 [ 0.984313725490196 0.6941176470588235 0.08627450980392157 ] (G) ShowSymbol
 1.000000 0.078147 [ 0.047058823529411764 0.5019607843137255 0.25098039215686274 ] (T) ShowSymbol
 1.000000 0.107452 [ 0.20392156862745098 0.27058823529411763 0.611764705882353 ] (C) ShowSymbol
 1.000000 0.371199 [ 0.796078431372549 0.12549019607843137 0.14901960784313725 ] (A) ShowSymbol
 0.270944 0.270944 DrawErrorbar
EndStack

() StartStack
 1.000000 0.020374 [ 0.20392156862745098 0.27058823529411763 0.611764705882353 ] (C) ShowSymbol
 1.000000 0.074705 [ 0.047058823529411764 0.5019607843137255 0.25098039215686274 ] (T) ShowSymbol
 1.000000 0.081497 [ 0.796078431372549 0.12549019607843137 0.14901960784313725 ] (A) ShowSymbol
 1.000000 0.224116 [ 0.984313725490196 0.6941176470588235 0.08627450980392157 ] (G) ShowSymbol
 0.230505 0.230505 DrawErrorbar
EndStack

() StartStack
 1.000000 0.023851 [ 0.984313725490196 0.6941176470588235 0.08627450980392157 ] (G) ShowSymbol
 1.000000 0.038161 [ 0.796078431372549 0.12549019607843137 0.14901960784313725 ] (A) ShowSymbol
 1.000000 0.090632 [ 0.047058823529411764 0.5019607843137255 0.25098039215686274 ] (T) ShowSymbol
 1.000000 0.128793 [ 0.20392156862745098 0.27058823529411763 0.611764705882353 ] (C) ShowSymbol
 0.158537 0.223088 DrawErrorbar
EndStack

(15) StartStack
 1.000000 0.000000 [ 0.796078431372549 0.12549019607843137 0.14901960784313725 ] (A) ShowSymbol
 1.000000 0.061086 [ 0.20392156862745098 0.27058823529411763 0.611764705882353 ] (C) ShowSymbol
 1.000000 0.234165 [ 0.984313725490196 0.6941176470588235 0.08627450980392157 ] (G) ShowSymbol
 1.000000 0.305432 [ 0.047058823529411764 0.5019607843137255 0.25098039215686274 ] (T) ShowSymbol
 0.194377 0.194377 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000000 [ 0.20392156862745098 0.27058823529411763 0.611764705882353 ] (C) ShowSymbol
 1.000000 0.113954 [ 0.984313725490196 0.6941176470588235 0.08627450980392157 ] (G) ShowSymbol
 1.000000 0.122093 [ 0.796078431372549 0.12549019607843137 0.14901960784313725 ] (A) ShowSymbol
 1.000000 0.244187 [ 0.047058823529411764 0.5019607843137255 0.25098039215686274 ] (T) ShowSymbol
 0.166176 0.166176 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000000 [ 0.047058823529411764 0.5019607843137255 0.25098039215686274 ] (T) ShowSymbol
 1.000000 0.057756 [ 0.20392156862745098 0.27058823529411763 0.611764705882353 ] (C) ShowSymbol
 1.000000 0.219474 [ 0.984313725490196 0.6941176470588235 0.08627450980392157 ] (G) ShowSymbol
 1.000000 0.404293 [ 0.796078431372549 0.12549019607843137 0.14901960784313725 ] (A) ShowSymbol
 0.220763 0.220763 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000000 [ 0.984313725490196 0.6941176470588235 0.08627450980392157 ] (G) ShowSymbol
 1.000000 0.054856 [ 0.20392156862745098 0.27058823529411763 0.611764705882353 ] (C) ShowSymbol
 1.000000 0.241369 [ 0.796078431372549 0.12549019607843137 0.14901960784313725 ] (A) ShowSymbol
 1.000000 0.351082 [ 0.047058823529411764 0.5019607843137255 0.25098039215686274 ] (T) ShowSymbol
 0.205374 0.205374 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000000 [ 0.984313725490196 0.6941176470588235 0.08627450980392157 ] (G) ShowSymbol
 1.000000 0.118652 [ 0.047058823529411764 0.5019607843137255 0.25098039215686274 ] (T) ShowSymbol
 1.000000 0.118652 [ 0.796078431372549 0.12549019607843137 0.14901960784313725 ] (A) ShowSymbol
 1.000000 0.346069 [ 0.20392156862745098 0.27058823529411763 0.611764705882353 ] (C) ShowSymbol
 0.211736 0.211736 DrawErrorbar
EndStack

(20) StartStack
 1.000000 0.020806 [ 0.047058823529411764 0.5019607843137255 0.25098039215686274 ] (T) ShowSymbol
 1.000000 0.072822 [ 0.796078431372549 0.12549019607843137 0.14901960784313725 ] (A) ShowSymbol
 1.000000 0.114435 [ 0.20392156862745098 0.27058823529411763 0.611764705882353 ] (C) ShowSymbol
 1.000000 0.405723 [ 0.984313725490196 0.6941176470588235 0.08627450980392157 ] (G) ShowSymbol
 0.279412 0.279412 DrawErrorbar
EndStack

() StartStack
 1.000000 0.029825 [ 0.796078431372549 0.12549019607843137 0.14901960784313725 ] (A) ShowSymbol
 1.000000 0.039767 [ 0.047058823529411764 0.5019607843137255 0.25098039215686274 ] (T) ShowSymbol
 1.000000 0.149127 [ 0.20392156862745098 0.27058823529411763 0.611764705882353 ] (C) ShowSymbol
 1.000000 0.367847 [ 0.984313725490196 0.6941176470588235 0.08627450980392157 ] (G) ShowSymbol
 0.267930 0.267930 DrawErrorbar
EndStack

() StartStack
 1.000000 0.020287 [ 0.984313725490196 0.6941176470588235 0.08627450980392157 ] (G) ShowSymbol
 1.000000 0.032966 [ 0.20392156862745098 0.27058823529411763 0.611764705882353 ] (C) ShowSymbol
 1.000000 0.032966 [ 0.796078431372549 0.12549019607843137 0.14901960784313725 ] (A) ShowSymbol
 1.000000 0.063397 [ 0.047058823529411764 0.5019607843137255 0.25098039215686274 ] (T) ShowSymbol
 0.109839 0.181249 DrawErrorbar
EndStack

() StartStack
 1.000000 0.006605 [ 0.796078431372549 0.12549019607843137 0.14901960784313725 ] (A) ShowSymbol
 1.000000 0.079262 [ 0.047058823529411764 0.5019607843137255 0.25098039215686274 ] (T) ShowSymbol
 1.000000 0.125499 [ 0.984313725490196 0.6941176470588235 0.08627450980392157 ] (G) ShowSymbol
 1.000000 0.178341 [ 0.20392156862745098 0.27058823529411763 0.611764705882353 ] (C) ShowSymbol
 0.175703 0.175703 DrawErrorbar
EndStack

() StartStack
 1.000000 0.027420 [ 0.796078431372549 0.12549019607843137 0.14901960784313725 ] (A) ShowSymbol
 1.000000 0.045701 [ 0.20392156862745098 0.27058823529411763 0.611764705882353 ] (C) ShowSymbol
 1.000000 0.137102 [ 0.047058823529411764 0.5019607843137255 0.25098039215686274 ] (T) ShowSymbol
 1.000000 0.329045 [ 0.984313725490196 0.6941176470588235 0.08627450980392157 ] (G) ShowSymbol
 0.260787 0.260787 DrawErrorbar
EndStack

EndLine

EndLogo


%%EOF
